user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}



http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    upstream app {
        server django:5000;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;
        charset     utf-8;

        location /static/ {
            alias /app/staticfiles/;
        }

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;

            proxy_pass   http://app;

			# Pass request to the upstream alias
			# Require http version 1.1 to allow for upgrade requests
			proxy_http_version 1.1;
			# We want proxy_buffering off for proxying to websockets.
			proxy_buffering off;
			# http://en.wikipedia.org/wiki/X-Forwarded-For
			# pass the Host: header from the client for the sake of redirects
			# We've set the Host header, so we don't need Nginx to muddle
			# about with redirects
			proxy_redirect off;
			# Depending on the request value, set the Upgrade and 
			# connection headers
			proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}
